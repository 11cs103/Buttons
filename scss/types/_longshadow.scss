/*
* Long Shadow Buttons
*/

//Loops $length times building a long shadow. Defaults downward right.
@function longshadow($type, $color, $length, $expand: false, $direction: right) {
  $values: 0px 0px $color;
  @if $expand == true {
    $values: 0px 0px 0px $color;
  }

  @if $direction == right {
    @for $i from 1 through $length {
      $kolor: $color;

      @if $expand == true {
        $values: #{$values}, #{$i}px #{$i}px unquote($i * .15 + 'px ') $kolor;
      } @else {
        $values: #{$values}, #{$i}px #{$i}px #{$kolor};
      }
    }
  }
  @if $direction == left {
    @for $i from 1 through $length {
      $kolor: $color;
      $values: #{$values}, unquote($i * -1 + 'px') #{$i}px #{$kolor};
    }
  }
  @return $values;
}

@mixin base($direction) {
  overflow: hidden;

  //Create long shadow for each of our action colors
  @each $ubtn-color in $ubtn-colors {
    $ubtn-name: nth($ubtn-color, 1);
    $ubtn-background: nth($ubtn-color, 2);
    $ubtn-color: nth($ubtn-color, 3);

    &#{$ubtn-namespace}-#{$ubtn-name} {
      background-color: $ubtn-background;
      text-shadow: longshadow(text, darken($ubtn-background, 10%), 35, false, $direction);

      //Expand (skew)
      &#{$ubtn-namespace}-longshadow-expand {
        text-shadow: longshadow(text, darken($ubtn-background, 10%), 50, true, $direction);
      }

      &:hover,
      &:focus {
        background: linear-gradient(top,  lighten($ubtn-background, 7%), darken($ubtn-background, 7%));
      }

      &:active,
      &.active,
      &.is-active  {
        text-shadow: 0 1px 0 rgba(255, 255, 255, .4);
      }
    }
  }

}

//Long Shadow downwards to the right (default)
#{$ubtn-namespace}-longshadow,
#{$ubtn-namespace}-longshadow-right {
  @include base(right);
}

//Long Shadow downwards to the left
#{$ubtn-namespace}-longshadow-left {
  @include base(left);
}

